# Ruff configuration file
target-version = "py313"
line-length = 120
preview = true

[lint]
select = [
    # flake8-bugbear
    "B",
    # flake8-comprehensions
    "C4",
    #pydoclint
    "DOC",
    # pydocstyle
    "D",
    # - ERRORS
    "E",
    # eradicate (commented-out code)
#    "ERA",
    # Pyflakes
    "F",
    "FLY",
    # isort
    "I",
    # Fast API
    "FAST",
    # NumPy-specific rules (NPY)
    "NPY",
    # Perflint (PERF)
    "PERF",
    # flake8-use-pathlib
    "PTH",
    # pyupgrade
    "UP",
    # flake8-simplify
    "SIM",
    # Django
    "DJ",
    # Ruff
    "RUF",
    # flake8-bandit (security)
    "S",
    # flake8-print
    "T20",
    # flake8-trio (async safety)
    "ASYNC1",
    # - Warning
    "W",

]
ignore = ["D107"]
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[lint.per-file-ignores]
"tests/*" = ["S101", "D100", "D103"]  # Allow assert, missing docstrings in tests
"__init__.py" = ["D104"]              # Allow missing docstrings in __init__.py
"migrations/*" = ["D100", "D101"]     # Django migrations don't need docstrings

[format]
# Like Black, use double quotes for strings.
quote-style = "double"
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = true

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"