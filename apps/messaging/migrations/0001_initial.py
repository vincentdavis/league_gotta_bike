# Generated by Django 5.2.6 on 2025-10-19 01:30

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('organizations', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ChatRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Room name', max_length=200)),
                ('slug', models.SlugField(help_text='URL-friendly room name', max_length=200, unique=True)),
                ('description', models.TextField(blank=True, help_text='Room description or purpose')),
                ('room_type', models.CharField(choices=[('public', 'Public Chat'), ('organization', 'Organization Chat'), ('direct', 'Direct Message'), ('announcement', 'Announcement Channel')], default='public', help_text='Type of chat room', max_length=20)),
                ('is_active', models.BooleanField(default=True, help_text='Whether the room is active')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When the room was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Last update time')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created the room', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_rooms', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(blank=True, help_text='Organization this room belongs to (for organization rooms)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='chat_rooms', to='organizations.organization')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ChatRoomParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('moderator', 'Moderator'), ('member', 'Member')], default='member', help_text='Role in this chat room', max_length=20)),
                ('joined_at', models.DateTimeField(auto_now_add=True, help_text='When user joined the room')),
                ('last_read', models.DateTimeField(blank=True, help_text='Last time user read messages in this room', null=True)),
                ('notifications_enabled', models.BooleanField(default=True, help_text='Whether user receives notifications for this room')),
                ('is_active', models.BooleanField(default=True, help_text='Whether user is currently an active participant')),
                ('chat_room', models.ForeignKey(help_text='Chat room', on_delete=django.db.models.deletion.CASCADE, to='messaging.chatroom')),
                ('user', models.ForeignKey(help_text='User participant', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['joined_at'],
            },
        ),
        migrations.AddField(
            model_name='chatroom',
            name='participants',
            field=models.ManyToManyField(help_text='Users who are participants in this room', related_name='chat_rooms', through='messaging.ChatRoomParticipant', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(help_text='Message content', max_length=5000)),
                ('timestamp', models.DateTimeField(auto_now_add=True, help_text='When the message was sent')),
                ('chat_room', models.ForeignKey(blank=True, help_text='Chat room this message belongs to (null for legacy messages)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='messaging.chatroom')),
                ('reply_to', models.ForeignKey(blank=True, help_text='Message this is replying to (for threading)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='replies', to='messaging.message')),
                ('user', models.ForeignKey(blank=True, help_text='User who sent the message (null for anonymous users)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['timestamp'],
            },
        ),
        migrations.AddIndex(
            model_name='chatroomparticipant',
            index=models.Index(fields=['user', 'is_active'], name='messaging_c_user_id_4a3d77_idx'),
        ),
        migrations.AddIndex(
            model_name='chatroomparticipant',
            index=models.Index(fields=['chat_room', 'is_active'], name='messaging_c_chat_ro_037f00_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='chatroomparticipant',
            unique_together={('chat_room', 'user')},
        ),
        migrations.AddIndex(
            model_name='chatroom',
            index=models.Index(fields=['room_type'], name='messaging_c_room_ty_ebeb83_idx'),
        ),
        migrations.AddIndex(
            model_name='chatroom',
            index=models.Index(fields=['organization'], name='messaging_c_organiz_f97e7c_idx'),
        ),
        migrations.AddIndex(
            model_name='chatroom',
            index=models.Index(fields=['slug'], name='messaging_c_slug_6df5a4_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['timestamp'], name='messaging_m_timesta_bd3028_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['chat_room', 'timestamp'], name='messaging_m_chat_ro_3072d1_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['user'], name='messaging_m_user_id_ea1dac_idx'),
        ),
    ]
