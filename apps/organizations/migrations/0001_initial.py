# Generated by Django 5.2.6 on 2025-10-19 01:30

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('league', 'League'), ('team', 'Team'), ('squad', 'Squad'), ('club', 'Club'), ('practice_group', 'Practice Group')], help_text='Type of organization', max_length=20)),
                ('name', models.CharField(help_text='Organization name', max_length=200)),
                ('slug', models.SlugField(help_text='URL-friendly name', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Organization description')),
                ('contact_email', models.EmailField(blank=True, help_text='Primary contact email', max_length=254)),
                ('contact_phone', models.CharField(blank=True, help_text='Primary contact phone', max_length=20)),
                ('website_url', models.URLField(blank=True, help_text='Organization website URL')),
                ('logo', models.ImageField(blank=True, help_text='Organization logo', null=True, upload_to='organizations/logos/')),
                ('is_active', models.BooleanField(default=True, help_text='Is organization active?')),
                ('enable_member_chat', models.BooleanField(default=True, help_text='Enable member chat room (all members can read and post)')),
                ('enable_news_channel', models.BooleanField(default=True, help_text='Enable news/announcement channel (all members can read, only owners/admins/managers can post)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(blank=True, help_text='Parent organization in hierarchy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='organizations.organization')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='LeagueProfile',
            fields=[
                ('organization', models.OneToOneField(limit_choices_to={'type': 'league'}, on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='league_profile', serialize=False, to='organizations.organization')),
                ('sanctioning_body', models.CharField(blank=True, help_text='Official sanctioning body (e.g., USA Cycling, UCI)', max_length=200)),
                ('region', models.CharField(blank=True, help_text='Geographic region or state', max_length=100)),
                ('membership_requirements', models.TextField(blank=True, help_text='Requirements for league membership')),
            ],
            options={
                'verbose_name': 'League Profile',
                'verbose_name_plural': 'League Profiles',
            },
        ),
        migrations.CreateModel(
            name='SquadProfile',
            fields=[
                ('organization', models.OneToOneField(limit_choices_to={'type': 'squad'}, on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='squad_profile', serialize=False, to='organizations.organization')),
            ],
            options={
                'verbose_name': 'Squad Profile',
                'verbose_name_plural': 'Squad Profiles',
            },
        ),
        migrations.CreateModel(
            name='TeamProfile',
            fields=[
                ('organization', models.OneToOneField(limit_choices_to={'type': 'team'}, on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='team_profile', serialize=False, to='organizations.organization')),
                ('team_type', models.CharField(blank=True, choices=[('high_school', 'High School'), ('racing', 'Racing'), ('devo', 'Devo')], help_text='Type of team', max_length=20)),
            ],
            options={
                'verbose_name': 'Team Profile',
                'verbose_name_plural': 'Team Profiles',
            },
        ),
        migrations.AddIndex(
            model_name='organization',
            index=models.Index(fields=['type'], name='organizatio_type_7447c3_idx'),
        ),
        migrations.AddIndex(
            model_name='organization',
            index=models.Index(fields=['slug'], name='organizatio_slug_048085_idx'),
        ),
        migrations.AddIndex(
            model_name='organization',
            index=models.Index(fields=['parent'], name='organizatio_parent__c2cd70_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='organization',
            unique_together={('parent', 'slug')},
        ),
    ]
